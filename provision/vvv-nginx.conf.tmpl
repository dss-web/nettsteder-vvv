# For more information on configuration, see:
#   * Official English Documentation: http://nginx.org/en/docs/
#   * Official Russian Documentation: http://nginx.org/ru/docs/

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.


	server {
	    listen       80;
	    listen       443 ssl;
	    server_name  {{DOMAINS_HERE}};
	    root         {vvv_path_to_site}/public_html;

	    error_log    {vvv_path_to_site}/log/error.log;
	    access_log   {vvv_path_to_site}/log/access.log;

	    set          $upstream {upstream};

		index index.php index.html;

		# Don’t log favicon requests
		location /favicon.ico {
		        log_not_found off;
		        access_log off;
		}

		# Disallow access to readme.html
		location /readme.html {
		        deny all;
		        access_log off;
		        log_not_found off;
		}

		# Disallow access to XML-RPC
		location ~ xmlrpc\.php {
		        deny all;
		        access_log off;
		        log_not_found off;
		}

		# Allow access to the ACME Challenge (Let’s encrypt)
		location ~ /\.well-known\/acme-challenge {
		        allow all;
			auth_basic off;
		}

		# Disallow access to all other dotfiles
		location ~ /\. {
		        deny all;
		        access_log off;
		        log_not_found off;
		}

		# Deny access to any files with a .php extension in the uploads directory
		location ~* /uploads/.*.php$ {
		        deny all;
		        access_log off;
		        log_not_found off;
		}

		# Deny access to any files with a .php extension in the uploads directory for multisite
		location ~* /files/(.*).php$ {
		        deny all;
		        access_log off;
		        log_not_found off;
		}

		if (!-e $request_filename) {

		        # Add trailing slash to */wp-admin requests.
		        rewrite /wp-admin$ $scheme://$host$uri/ permanent;

		        # WordPress is in a subdir
		        rewrite (/wp-.*) /wp$1 last;
		        rewrite (/.*\.php)$ /wp$1 last;

			# WordPress is in docroot
			#rewrite (/wp-.*) /$1 last;
			#rewrite (/.*\.php)$ /$1 last;

		        # Yoast SEO Sitemap
		        rewrite ^/sitemap_index\.xml$ /index.php?sitemap=1 last;
		        rewrite ^/([^/]+?)-sitemap([0-9]+)?\.xml$ /index.php?sitemap=$1&sitemap_n=$2 last;
		}

		# Directives to send expires headers and turn off 404 error logging.
		location ~* \.(png|jpg|jpeg|gif|ico|woff|otf|ttf|eot)$ {
		        expires max;
		        log_not_found off;
		        add_header Pragma public;
		        add_header Cache-Control "public";
		        add_header Vary "Accept-Encoding";
		}

		# Directives to send expires headers and turn off 404 error logging.
		location ~* \.(js|css|svg)$ {
		        expires max;
		        log_not_found off;
		        add_header Pragma public;
		        add_header Cache-Control "public";
		}

		location / {
			# WordPress is in a subdir
		        try_files $uri $uri/ /wp/index.php?$args;

			# WordPress is in docroot
			#try_files $uri $uri/ /index.php?$args;
		}

		location ~ \.php$ {

			# WordPress is in a subdir
		        try_files $uri /wp/index.php;

			# WordPress is in docroot
			#try_files $uri /index.php;

		        fastcgi_split_path_info ^(.+\.php)(/.+)$;

		        include fastcgi_params;

		        fastcgi_index index.php;

		        fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;

		        fastcgi_read_timeout 3600s;
		        fastcgi_buffer_size 128k;
		        fastcgi_buffers 4 128k;

		        add_header X-XSS-Protection "1; mode=block" always;
		        add_header X-Content-Type-Options "nosniff" always;
		        add_header X-Frame-Options "SAMEORIGIN" always;

		        if ($scheme = 'https') {
		                add_header Strict-Transport-Security "max-age=31536000; preload" always;
		                add_header X-XSS-Protection "1; mode=block" always;
		                add_header X-Content-Type-Options "nosniff" always;
		                add_header X-Frame-Options "SAMEORIGIN" always;
		        }

		        fastcgi_pass   $upstream;
		}
	}
}
